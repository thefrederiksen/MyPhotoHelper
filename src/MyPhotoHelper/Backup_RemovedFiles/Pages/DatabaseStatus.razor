@page "/database-status"
@using FaceVault.Data
@using FaceVault.Services
@using Microsoft.EntityFrameworkCore

<PageTitle>Database Status - FaceVault</PageTitle>

<h1>Database Status</h1>

<div class="row mb-3">
    <div class="col-md-6">
        <button class="btn btn-primary" @onclick="RefreshStatus" disabled="@isLoading">
            @if (isLoading)
            {
                <span class="spinner-border spinner-border-sm me-2" role="status"></span>
            }
            <span class="oi oi-reload" aria-hidden="true"></span> Refresh
        </button>
        <button class="btn btn-success ms-2" @onclick="InitializeDatabase">
            <span class="oi oi-plus" aria-hidden="true"></span> Initialize Database
        </button>
        <div class="form-check form-switch d-inline-block ms-3">
            <input class="form-check-input" type="checkbox" id="autoRefresh" @bind:get="autoRefresh" @bind:set="OnAutoRefreshChanged">
            <label class="form-check-label" for="autoRefresh">
                Auto-refresh (@autoRefreshInterval sec)
            </label>
        </div>
    </div>
    <div class="col-md-6 text-end">
        <small class="text-muted">Last updated: @lastUpdated.ToString("HH:mm:ss")</small>
    </div>
</div>

@if (isLoading)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p>Loading database status...</p>
    </div>
}
else
{
    <!-- Database Connection Status -->
    <div class="card mb-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Connection Status</h5>
            <span class="badge bg-@(canConnect ? "success" : "danger")">
                @(canConnect ? "Connected" : "Disconnected")
            </span>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <strong>Database File:</strong> @databasePath
                </div>
                <div class="col-md-3">
                    <strong>File Exists:</strong> 
                    <span class="badge bg-@(databaseExists ? "success" : "warning")">
                        @(databaseExists ? "Yes" : "No")
                    </span>
                </div>
                <div class="col-md-3">
                    <strong>Size:</strong> @databaseSizeFormatted
                </div>
            </div>
            @if (!string.IsNullOrEmpty(connectionError))
            {
                <div class="alert alert-danger mt-2">
                    <strong>Connection Error:</strong> @connectionError
                </div>
            }
        </div>
    </div>

    <!-- Table Statistics -->
    <div class="card mb-3">
        <div class="card-header">
            <h5 class="mb-0">Table Statistics</h5>
        </div>
        <div class="card-body">
            <div class="row">
                @foreach (var table in tableCounts.OrderByDescending(t => t.Value))
                {
                    <div class="col-lg-2 col-md-3 col-sm-4 mb-3">
                        <div class="card text-center @GetCardClass(table.Key)">
                            <div class="card-body">
                                <h4 class="@GetTextClass(table.Key)">@table.Value.ToString("N0")</h4>
                                <p class="card-text small">@table.Key</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Database Schema Status -->
    <div class="card mb-3">
        <div class="card-header">
            <h5 class="mb-0">Schema Status</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <strong>Database Created:</strong>
                    <span class="badge bg-@(databaseExists ? "success" : "warning")">
                        @(databaseExists ? "Yes" : "No")
                    </span>
                </div>
                <div class="col-md-3">
                    <strong>Migrations Applied:</strong>
                    <span class="badge bg-@(migrationsApplied ? "success" : "warning")">
                        @(migrationsApplied ? "Yes" : "No")
                    </span>
                </div>
                <div class="col-md-3">
                    <strong>Pending Migrations:</strong>
                    <span class="badge bg-@(pendingMigrations.Any() ? "warning" : "success")">
                        @pendingMigrations.Count()
                    </span>
                </div>
                <div class="col-md-3">
                    <strong>Schema Version:</strong>
                    <span class="badge bg-info">@schemaVersion</span>
                </div>
            </div>

            @if (pendingMigrations.Any())
            {
                <div class="alert alert-warning mt-3">
                    <h6>Pending Migrations:</h6>
                    <ul class="mb-0">
                        @foreach (var migration in pendingMigrations)
                        {
                            <li>@migration</li>
                        }
                    </ul>
                    <button class="btn btn-warning btn-sm mt-2" @onclick="ApplyMigrations">
                        Apply Migrations
                    </button>
                </div>
            }
        </div>
    </div>

    <!-- Performance Metrics -->
    <div class="card mb-3">
        <div class="card-header">
            <h5 class="mb-0">Performance Metrics</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <strong>Last Query Time:</strong> @lastQueryTime ms
                </div>
                <div class="col-md-4">
                    <strong>Connection Pool:</strong> Active
                </div>
                <div class="col-md-4">
                    <strong>Status Check Time:</strong> @statusCheckTime ms
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">Quick Actions</h5>
        </div>
        <div class="card-body">
            <div class="btn-group" role="group">
                <button class="btn btn-outline-primary" @onclick="TestConnection">
                    <span class="oi oi-pulse" aria-hidden="true"></span> Test Connection
                </button>
                <button class="btn btn-outline-info" @onclick="ViewSchema">
                    <span class="oi oi-list" aria-hidden="true"></span> View Schema
                </button>
                <button class="btn btn-outline-success" @onclick="SeedTestData" disabled="@(!canConnect)">
                    <span class="oi oi-data-transfer-download" aria-hidden="true"></span> Seed Test Data
                </button>
                <button class="btn btn-outline-warning" @onclick="RepairDatabase" disabled="@(!databaseExists)">
                    <span class="oi oi-wrench" aria-hidden="true"></span> Repair Database
                </button>
                <button class="btn btn-outline-secondary" @onclick="ShowCountReport" disabled="@(!canConnect)">
                    <span class="oi oi-bug" aria-hidden="true"></span> Debug Count Report
                </button>
            </div>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert alert-@statusMessageType alert-dismissible fade show mt-3" role="alert">
        @statusMessage
        <button type="button" class="btn-close" @onclick="ClearStatusMessage"></button>
    </div>
}