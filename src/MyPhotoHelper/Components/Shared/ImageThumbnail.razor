@using MyPhotoHelper.Services
@using MyPhotoHelper.Models

<div class="photo-thumbnail-container">
    @if (imageLoaded && !string.IsNullOrEmpty(imageUrl))
    {
        <img src="@imageUrl" 
             class="@CssClass photo-fade-in" 
             alt="@Photo.FileName"
             title="@GetPhotoTooltip()"
             loading="lazy" />
    }
    
    <div class="photo-placeholder d-flex align-items-center justify-content-center @(imageLoaded ? "photo-fade-out" : "")">
        <div class="text-center">
            @if (isLoading && !imageLoaded)
            {
                <div class="spinner-border spinner-border-sm text-muted" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            }
            else if (hasError || (!imageLoaded && !isLoading))
            {
                @if (IsHeicFile())
                {
                    <span class="oi oi-camera-slr text-info mb-1" style="font-size: 2rem;" aria-hidden="true"></span>
                    <small class="d-block text-info fw-bold">HEIC</small>
                    <small class="d-block text-muted">Click to view</small>
                }
                else
                {
                    <span class="oi oi-image text-muted mb-1" aria-hidden="true"></span>
                    <small class="d-block text-muted">No preview</small>
                }
            }
        </div>
    </div>
    
    @if (!string.IsNullOrEmpty(imageUrl) && !imageLoaded)
    {
        <!-- Hidden image to preload -->
        <img src="@imageUrl" 
             style="display: none;"
             @onload="OnImageLoaded"
             @onerror="OnImageError" />
    }
</div>

@code {
    [Parameter] public tbl_images Photo { get; set; } = default!;
    [Parameter] public int Size { get; set; } = 250;
    [Parameter] public string CssClass { get; set; } = "card-img-top photo-thumbnail";
    
    private string imageUrl = string.Empty;
    private bool isLoading = true;
    private bool imageLoaded = false;
    private bool hasError = false;

    protected override void OnInitialized()
    {
        try
        {
            // For HEIC files, use the thumbnail endpoint which caches
            // For other files, use raw endpoint
            if (IsHeicFile())
            {
                imageUrl = $"/api/images/{Photo.ImageId}/thumbnail";
            }
            else
            {
                imageUrl = $"/api/images/{Photo.ImageId}/raw";
            }
            isLoading = true;
        }
        catch (Exception ex)
        {
            Logger.Warning($"Error setting image URL for {Photo.FileName}: {ex.Message}");
            isLoading = false;
            hasError = true;
        }
    }

    private void OnImageLoaded()
    {
        imageLoaded = true;
        isLoading = false;
        StateHasChanged();
    }

    private void OnImageError()
    {
        hasError = true;
        isLoading = false;
        StateHasChanged();
    }

    private bool IsHeicFile()
    {
        if (Photo?.FileExtension == null) return false;
        var extension = Photo.FileExtension.ToLowerInvariant();
        return extension == ".heic" || extension == ".heif";
    }

    private string GetPhotoTooltip()
    {
        var tooltip = $"{Photo.FileName}";
        if (Photo.tbl_image_metadata?.DateTaken.HasValue == true)
        {
            tooltip += $"\nTaken: {Photo.tbl_image_metadata.DateTaken.Value:yyyy-MM-dd HH:mm}";
        }
        if (Photo.tbl_image_metadata?.Width > 0 && Photo.tbl_image_metadata?.Height > 0)
        {
            tooltip += $"\nSize: {Photo.tbl_image_metadata.Width}Ã—{Photo.tbl_image_metadata.Height}";
        }
        if (IsHeicFile())
        {
            tooltip += $"\nHEIC format - Click to open in default viewer";
        }
        return tooltip;
    }
}

<style>
    .photo-thumbnail-container {
        position: relative;
        width: 100%;
        height: 100%;
        aspect-ratio: 1;
        overflow: hidden;
        border-radius: 0.375rem;
    }

    .photo-placeholder {
        background-color: #f8f9fa;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 1;
    }

    .photo-thumbnail {
        width: 100%;
        height: 100%;
        object-fit: cover;
        position: relative;
        z-index: 2;
    }

    .photo-fade-in {
        animation: fadeIn 0.3s ease-in;
    }

    .photo-fade-out {
        opacity: 0;
        transition: opacity 0.3s ease-out;
        pointer-events: none;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
</style>