@using MyPhotoHelper.Services
@using MyPhotoHelper.Models

@if (!string.IsNullOrEmpty(imageUrl))
{
    <img src="@imageUrl" 
         class="@CssClass" 
         alt="@Photo.FileName"
         title="@GetPhotoTooltip()"
         loading="lazy" />
}
else if (isLoading)
{
    <div class="card-img-top photo-placeholder d-flex align-items-center justify-content-center">
        <div class="spinner-border spinner-border-sm text-muted" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="card-img-top photo-placeholder d-flex align-items-center justify-content-center">
        <div class="text-center">
            @if (IsHeicFile())
            {
                <span class="oi oi-camera-slr text-info mb-1" style="font-size: 2rem;" aria-hidden="true"></span>
                <small class="d-block text-info fw-bold">HEIC</small>
                <small class="d-block text-muted">Converting...</small>
            }
            else
            {
                <span class="oi oi-image text-muted mb-1" aria-hidden="true"></span>
                <small class="d-block text-muted">No preview</small>
            }
        </div>
    </div>
}

@code {
    [Parameter] public tbl_images Photo { get; set; } = default!;
    [Parameter] public int Size { get; set; } = 250;
    [Parameter] public string CssClass { get; set; } = "card-img-top photo-thumbnail";
    
    private string imageUrl = string.Empty;
    private bool isLoading = true;

    protected override void OnInitialized()
    {
        try
        {
            // Use the API endpoint for thumbnails
            imageUrl = $"/api/images/{Photo.ImageId}/thumbnail";
        }
        catch (Exception ex)
        {
            Logger.Warning($"Error setting thumbnail URL for {Photo.FileName}: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private bool IsHeicFile()
    {
        if (Photo?.FileExtension == null) return false;
        var extension = Photo.FileExtension.ToLowerInvariant();
        return extension == ".heic" || extension == ".heif";
    }

    private string GetPhotoTooltip()
    {
        var tooltip = $"{Photo.FileName}";
        if (Photo.tbl_image_metadata?.DateTaken.HasValue == true)
        {
            tooltip += $"\nTaken: {Photo.tbl_image_metadata.DateTaken.Value:yyyy-MM-dd HH:mm}";
        }
        if (Photo.tbl_image_metadata?.Width > 0 && Photo.tbl_image_metadata?.Height > 0)
        {
            tooltip += $"\nSize: {Photo.tbl_image_metadata.Width}Ã—{Photo.tbl_image_metadata.Height}";
        }
        if (IsHeicFile())
        {
            tooltip += $"\nHEIC format - Click to open in default viewer";
        }
        return tooltip;
    }
}

<style>
    .photo-placeholder {
        aspect-ratio: 1;
        background-color: #f8f9fa;
        border-radius: 0.375rem;
    }

    .photo-thumbnail {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
</style>